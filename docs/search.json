[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/clav.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Cluster Analysis Validation","text":"Cluster analysis statistical procedure grouping observations using observation-centered approach compared variable-centric approaches (e.g. PCA, factor analysis). Whether preprocessing step predictive modeling primary analysis, validation critical determining generalizability across datasets. Theodoridis Koutroumbas (2008) identified three broad types validation cluster analysis: 1) Internal cluster validation, 2) Relative cluster validation, 3) External cluster validation. Strategies steps 1 2 well established, however cluster analysis typically unsupervised learning method observed outcome. Ullman et al (2021) proposed approach validating cluster solution visually inspecting cluster solutions across training validation dataset. paper introduces clav R package implements expands approach generating multiple random samples (using either simple random split bootstrap samples). Visualizations cluster profiles well distributions cluster means provided along Shiny application assist researcher.","code":""},{"path":[]},{"path":"/articles/clav.html","id":"data-source","dir":"Articles","previous_headings":"Introduction","what":"Data source","title":"Cluster Analysis Validation","text":"Programme International Student Assessment (PISA) large scale study conducted Organisation Economic Co-operation Development (OECD) every three years designed measure 15-year-olds’ reading, mathematics, science skill. addition measuring academic skills, students complete questionnaires areas including motivation, self-efficacy, interest, among demographics. study uses data 2015 administration United States. Cluster analysis performed student interest, motivation, self-efficacy explore variables related two dependent variables: science skills self-reported knowledge science principals (see Appendix items inform scales). clav package includes data United States Canada, use United States here1.","code":"library(clav) data(pisa2015, package = 'clav')  cluster_vars <- c('interest', 'enjoyment', 'motivation', 'efficacy', 'belonging') outcome_vars <- c('science_score', 'principals')  pisa_usa <- pisa2015 |>      dplyr::filter(country == 'UNITED STATES') |>     dplyr::mutate(dplyr::across(dplyr::all_of(cluster_vars), clav::scale_this))"},{"path":"/articles/clav.html","id":"variable-centric-analysis","dir":"Articles","previous_headings":"Introduction","what":"Variable centric analysis","title":"Cluster Analysis Validation","text":"","code":"science_lm_out <- lm(     science_score ~ interest + enjoyment + motivation + efficacy + belonging,     data = pisa_usa) summary(science_lm_out) #>  #> Call: #> lm(formula = science_score ~ interest + enjoyment + motivation +  #>     efficacy + belonging, data = pisa_usa) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -274.168  -58.914    1.114   60.446  271.258  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  506.398      1.226 413.173  < 2e-16 *** #> interest      15.938      1.407  11.325  < 2e-16 *** #> enjoyment     23.511      1.283  18.318  < 2e-16 *** #> motivation    -8.043      1.318  -6.104 1.12e-09 *** #> efficacy      16.767      1.326  12.646  < 2e-16 *** #> belonging     -1.609      1.231  -1.308    0.191     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 83.46 on 4631 degrees of freedom #> Multiple R-squared:  0.1759, Adjusted R-squared:  0.175  #> F-statistic: 197.7 on 5 and 4631 DF,  p-value: < 2.2e-16 principals_lm_out <- lm(     science_score ~ interest + enjoyment + motivation + efficacy + belonging,     data = pisa_usa) summary(principals_lm_out) #>  #> Call: #> lm(formula = science_score ~ interest + enjoyment + motivation +  #>     efficacy + belonging, data = pisa_usa) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -274.168  -58.914    1.114   60.446  271.258  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  506.398      1.226 413.173  < 2e-16 *** #> interest      15.938      1.407  11.325  < 2e-16 *** #> enjoyment     23.511      1.283  18.318  < 2e-16 *** #> motivation    -8.043      1.318  -6.104 1.12e-09 *** #> efficacy      16.767      1.326  12.646  < 2e-16 *** #> belonging     -1.609      1.231  -1.308    0.191     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 83.46 on 4631 degrees of freedom #> Multiple R-squared:  0.1759, Adjusted R-squared:  0.175  #> F-statistic: 197.7 on 5 and 4631 DF,  p-value: < 2.2e-16"},{"path":"/articles/clav.html","id":"finding-the-desired-number-of-clusters","dir":"Articles","previous_headings":"","what":"Finding the desired number of clusters","title":"Cluster Analysis Validation","text":"Davies-Bouldin Index (1979) - DBI metric used evaluate quality cluster analysis measuring compactness clusters separation . lower DBI indicates better clustering, well-separated compact clusters. Calinski-Harabasz Statistic (Caliński & Harabasz, 1974) - CH statistic measures ratio -cluster variance within-cluster variance, indicating well-separated compact clusters . Higher CH values generally indicate better clustering performance. Within group sum squares (Thorndike, 1953) - WSS quantifies dispersion data points within cluster, lower WSS values indicating compact well-defined clusters. Silhoutte score (Rousseeuw, 1986) - silhouette value measure similar object cluster (cohesion) compared clusters (separation). silhouette value ranges −1 +1, high value indicates object well matched cluster poorly matched neighboring clusters. Gap statistic (Tibshirani, Walther, & Hastie, 2001) - Gap statistic works comparing within-cluster variation actual data null reference distribution, typically uniform distribution. gap difference two, optimal number clusters chosen gap statistic maximized. Rand index (2012) - Rand index measures often pairs data points assigned different clusters partitions. higher Rand Index indicates greater similarity two clusterings.","code":"optimal <- optimal_clusters(pisa_usa[,cluster_vars], max_k = 6) optimal #>   k      wss silhoutte       gap calinski_harabasz davies_bouldin rand_index #> 1 1 23180.00        NA 0.9077290               NaN            NaN         NA #> 2 2 18221.06 0.2003285 0.8881730         1261.4359       1.916861  0.5015503 #> 3 3 16348.24 0.2085359 0.8738598          965.0861       2.152198  0.6832980 #> 4 4 14588.79 0.1621539 0.8655373          908.7634       1.819800  0.8098577 #> 5 5 13318.75 0.1684867 0.8602912          869.9972       1.809378  0.7366672 #> 6 6 12223.82 0.1718593 0.8715511          826.2544       1.634673  0.7914534 plot(optimal, ncol = 2)"},{"path":"/articles/clav.html","id":"validating-cluster-solution","dir":"Articles","previous_headings":"","what":"Validating cluster solution","title":"Cluster Analysis Validation","text":"One biggest challenges estimating unsupervised models determining accuracy model given instances now know, observed, outcome. Since compare model outputs know value, instead look stability model estimates across multiple samples. Ullman et al (2021) proposed splitting data visually comparing cluster profiles across two samples. clav package extends idea implementing algorithm many samples drawn, cluster membership estimated training dataset, cluster membership --bag sample predicted. can use number visualizations determine stability profiles across many random samples. cluster_validation function implements algorithm. default estimate 100 cluster models (using K-means cluster, methods can specified using cluster_fun parameter). iteration, 50% observations randomly selected (training size can modified using sample_size parameter) cluster model estimated. Cluster membership predicted using model 50% observations. cluster model also estimated using full dataset. figure shows cluster profiles 100 samples training data left --bag sample right (paths color coded cluster membership). cluster profile using full dataset represented blue line. path mean variable grouped cluster membership plotted. example can see one cluster average across variables (green lines). two clusters bit mixed orange lines indicating cluster generally average exception belonging interest near mean. purple lines represent cluster generally nearly normal across variables. plots intended assist interpreting clusters (discussed later section), instead determine stability cluster estimates across many samples.  figure provides alternative approach determining stability plotting distribution means across clusters variables. Ideally want standard deviation distributions small possible.","code":"cv <- cluster_validation(     pisa_usa[,cluster_vars],     n_clusters = 3) plot(cv) plot_distributions(cv, plot_in_sample = TRUE, plot_oob_sample = TRUE)"},{"path":"/articles/clav.html","id":"bootstrapping","dir":"Articles","previous_headings":"Validating cluster solution","what":"Bootstrapping","title":"Cluster Analysis Validation","text":"","code":"cv_boot <- cluster_validation(     pisa_usa[,cluster_vars],     n_clusters = 3,     sample_size = nrow(pisa_usa),     replace = TRUE) plot(cv_boot)"},{"path":"/articles/clav.html","id":"retraining","dir":"Articles","previous_headings":"Validating cluster solution","what":"Retraining","title":"Cluster Analysis Validation","text":"","code":"cv_retrain <- cluster_validation(     pisa_usa[,cluster_vars],     n_clusters = 3,     oob_predict_fun = function(fit, newdata) {         stats::kmeans(newdata, 3)$cluster     } ) plot(cv_retrain)"},{"path":[]},{"path":"/articles/clav.html","id":"profile-plots","dir":"Articles","previous_headings":"Analyzing dependent variables","what":"Profile plots","title":"Cluster Analysis Validation","text":"","code":"fit <- stats::kmeans(pisa_usa[,cluster_vars], centers = 3) profile_plot(pisa_usa[,cluster_vars],              clusters = fit$cluster,              df_dep = pisa_usa[,outcome_vars],              cluster_order = cluster_vars)"},{"path":"/articles/clav.html","id":"using-clusters-in-regression-analysis","dir":"Articles","previous_headings":"Analyzing dependent variables","what":"Using clusters in regression analysis","title":"Cluster Analysis Validation","text":"","code":"kmeans_out <- stats::kmeans(pisa_usa[,cluster_vars], 3) pisa_usa$cluster <- kmeans_out$cluster lm_out <- lm(science_score ~ interest + enjoyment + motivation + efficacy + belonging + cluster,              data = pisa_usa) summary(lm_out) #>  #> Call: #> lm(formula = science_score ~ interest + enjoyment + motivation +  #>     efficacy + belonging + cluster, data = pisa_usa) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -275.325  -58.953    2.182   59.072  272.494  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  527.086      4.173 126.307  < 2e-16 *** #> interest      17.467      1.434  12.180  < 2e-16 *** #> enjoyment     21.286      1.350  15.768  < 2e-16 *** #> motivation    -6.969      1.330  -5.239 1.69e-07 *** #> efficacy      20.392      1.496  13.634  < 2e-16 *** #> belonging     -3.187      1.264  -2.521   0.0117 *   #> cluster       -9.808      1.892  -5.185 2.25e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 83.23 on 4630 degrees of freedom #> Multiple R-squared:  0.1806, Adjusted R-squared:  0.1796  #> F-statistic: 170.1 on 6 and 4630 DF,  p-value: < 2.2e-16"},{"path":[]},{"path":[]},{"path":"/articles/clav.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Cluster Analysis Validation","text":"Caliński, T., & Harabasz, J. (1974). dendrite method cluster analysis. Communications Statistics, 3(1), 1–27. https://doi.org/10.1080/03610927408827101 Davies, D. L., & Bouldin, D.W. (1979). cluster separation measure. IEEE Transactions Pattern Analysis Machine Intelligence. PAMI-1 (2): 224–227. https://doi.org/10.1109/TPAMI.1979.4766909 Rand, W. M. (1971). Objective Criteria Evaluation Clustering Methods. Journal American Statistical Association, 66(336), 846–850. https://doi.org/10.1080/01621459.1971.10482356 Rousseeuw, P.J. (1986). Silhouettes: graphical aid interpretation validation cluster analysis. Journal Computational Applied Mathematics (20): 53-65. https://doi.org/10.1016/0377-0427(87)90125-7 Theodoridis, S., & Koutroumbas, K. (2008). Pattern Recognition, Fourth Edition. Academic Press, Inc. Thorndike, R. L. (1953). Belongs Family? Psychometrika, 18(4), 267–276. https://doi.org/10.1007/BF02289263 Tibshirani, R., Walther, G., & Hastie, T. (2001) Estimating number clusters data set via gap statistic. Journal Royal Statistical Society Series B: Statistical Methodology, 63(2), 411–423, https://doi.org/10.1111/1467-9868.00293 Ullmann, T., Hennig, C., & Boulesteix, .-L. (2022). Validation cluster analysis results validation data: systematic framework. WIREs Data Mining Knowledge Discovery, 12(3), e1444. https://doi.org/10.1002/widm.1444","code":""},{"path":"/articles/clav.html","id":"appendix-a-student-questionaire-items-and-scales","dir":"Articles","previous_headings":"","what":"Appendix A: Student Questionaire Items and Scales","title":"Cluster Analysis Validation","text":"Belonging: Thinking school: extent agree following statements? (ST034) feel like outsider (left things) school. make friends easily school. feel like belong school. feel awkward place school. students seem like . feel lonely school. Interest: much disagree agree statements ? (ST094) generally fun learning broad science topics. like reading broad science. happy working broad science topics. enjoy acquiring new knowledge broad science. interested learning broad science. Enjoyment: much disagree agree statements ? (ST094) generally fun learning broad science topics. like reading broad science. happy working broad science topics. enjoy acquiring new knowledge broad science. interested learning broad science. Motivation: much agree statements ? (ST113) Making effort school science subject(s) worth help work want later . learn school science subject(s) important need want later . Studying school science subject(s) worthwhile learn improve career prospects. Many things learn school science subject(s) help get job. Efficacy: easy think perform following tasks ? (ST129) Recognize science question underlies newspaper report health issue. Explain earthquakes occur frequently areas others. Describe role antibiotics treatment disease. Identify science question associated disposal garbage. Predict changes environment affect survival certain species. Interpret scientific information provided labelling food items. Discuss new evidence can lead change understanding possibility life Mars. Identify better two explanations formation acid rain. Principals: much disagree agree statements ? (ST131) good way know something true experiment. Ideas broad science sometimes change. Good answers based evidence many different experiments. good try experiments make sure findings. Sometimes broad science scientists change minds true science. ideas broad science science books sometimes change.","code":""},{"path":"/articles/daacs.html","id":"finding-the-desired-number-of-clusters","dir":"Articles","previous_headings":"","what":"Finding the desired number of clusters","title":"College Readiness Profiles","text":"","code":"optimal <- optimal_clusters(daacs[,cluster_vars], max_k = 6) optimal #>   k      wss silhoutte       gap calinski_harabasz davies_bouldin rand_index #> 1 1 38250.00        NA 0.9134492               NaN            NaN         NA #> 2 2 29868.66 0.2001269 0.8822160          1788.585       1.886276  0.5002855 #> 3 3 25052.91 0.2025981 0.8978628          1678.549       1.634979  0.7516727 #> 4 4 22790.00 0.1524237 0.8817384          1441.386       1.766747  0.8183650 #> 5 5 20747.34 0.1634359 0.9043772          1343.563       1.630104  0.7633536 #> 6 6 19198.02 0.1651130 0.9157450          1264.325       1.578091  0.9032546 plot(optimal, ncol = 2)"},{"path":"/articles/daacs.html","id":"validating-cluster-solution","dir":"Articles","previous_headings":"","what":"Validating cluster solution","title":"College Readiness Profiles","text":"","code":"cv <- cluster_validation(daacs[,cluster_vars],                          n_clusters = 5) plot(cv, facet = FALSE) plot_distributions(cv, plot_in_sample = TRUE, plot_oob_sample = TRUE) cv_boot <- cluster_validation(daacs[,cluster_vars],                          n_clusters = 5,                          sample_size = nrow(daacs),                          replace = TRUE) plot(cv_boot, facet = FALSE)"},{"path":"/articles/daacs.html","id":"profile-plots","dir":"Articles","previous_headings":"","what":"Profile plots","title":"College Readiness Profiles","text":"","code":"fit <- stats::kmeans(daacs[,cluster_vars], centers = 5) profile_plot(daacs[,cluster_vars],              clusters = fit$cluster,              df_dep = daacs[,c('LogFeedbackViews', 'TermSuccess')],              cluster_order = cluster_vars)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Bryer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryer J (2025). clav: Cluster Analysis Validation. R package version 1.0.0, https://jbryer.github.io/clav/.","code":"@Manual{,   title = {clav: Cluster Analysis Validation},   author = {Jason Bryer},   year = {2025},   note = {R package version 1.0.0},   url = {https://jbryer.github.io/clav/}, }"},{"path":"/index.html","id":"id_-cluster-analysis-validation-clav","dir":"","previous_headings":"","what":"Cluster Analysis Validation","title":"Cluster Analysis Validation","text":"Slides Joint Statistical Meeting (JSM) 2025 clav package provides utilities conducting cluster (profile) analysis emphasis validating stability profiles within given data set well across data sets. Unlike supervised models known class measured, validation unsupervised models known class can challenging. approach implemented attempts compare cluster results across many random samples.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cluster Analysis Validation","text":"can install development version clav like :","code":"remotes::install_github('jbryer/clav')"},{"path":"/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Cluster Analysis Validation","text":"following commands useful working package source locally.","code":"# Prep the PISA data set. This will take a while to run the first time. source('data-raw/data-prep-pisa-2015.R') # Generate the package documentation usethis::use_tidy_description() devtools::document() # Install the package devtools::install() # Run CRAN check devtools::check(cran = TRUE)  # Build the pkgdown site pkgdown::build_site()"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Cluster Analysis Validation","text":"Finding optimal number clusters.  Validating cluster profiles using random samples 50%. --bag uses remaining 50% predict cluster membership.  Re-estimate clusters using OOB sample instead predicting using sample model.  Bootstrap approach validation.  Using latent profile analysis estimating clusters.","code":"library(clav) data(pisa2015, package = 'clav')  cluster_vars <- c('interest', 'enjoyment', 'motivation', 'efficacy', \"belonging\") outcome_vars <- c('science_score', 'principals')  pisa_usa <- pisa2015 |> dplyr::filter(country == 'UNITED STATES') optimal <- optimal_clusters(pisa_usa[,cluster_vars], max_k = 5) optimal #>   k  wss silhoutte  gap calinski_harabasz davies_bouldin rand_index #> 1 1 9232        NA 0.83               NaN            NaN         NA #> 2 2 6746      0.24 0.87              1708            1.6       0.50 #> 3 3 5965      0.20 0.86              1329            1.8       0.64 #> 4 4 5198      0.20 0.86              1198            1.7       0.75 #> 5 5 4682      0.20 0.86              1124            1.5       0.75 plot(optimal, ncol = 2) pisa_cv_random <- pisa_usa |>      dplyr::select(dplyr::all_of(cluster_vars)) |>     clav::cluster_validation(         n_clusters = 3,         sample_size = 0.5 * nrow(pisa_usa),         replace = FALSE,         n_samples = 100,         seed = 42 ) plot(pisa_cv_random) pisa_cv_random2 <- pisa_usa |>      dplyr::select(dplyr::all_of(cluster_vars)) |>     clav::cluster_validation(         n_clusters = 3,         oob_predict_fun = function(fit, newdata) {             newfit <- stats::kmeans(newdata, 3)             newfit$cluster         },         sample_size = 0.5 * nrow(pisa_usa),         replace = FALSE,         n_samples = 100,         seed = 42 ) plot(pisa_cv_random2) pisa_cv_bootstrap <- pisa_usa |>      dplyr::select(dplyr::all_of(cluster_vars)) |>     clav::cluster_validation(         n_clusters = 3,         sample_size = nrow(pisa_usa),         replace = TRUE,         n_samples = 100,         seed = 42 ) plot(pisa_cv_bootstrap) library(tidyLPA) lpa <- pisa_usa |>      dplyr::select(dplyr::all_of(cluster_vars)) |>     tidyLPA::estimate_profiles(3) # lpa_predict <- predict(lpa, pisaUSA15[sample(nrow(pisaUSA15), 100),]) # lpa_estimates <- get_estimates(lpa) lpa_data <- get_data(lpa)  plot_profiles(lpa) clav::profile_plot(pisa_usa[,cluster_vars],                    clusters = lpa_data$Class,                    df_dep = pisa_usa[,c('science_score')])  lpa_cv_random <- cluster_validation(     pisaUSA15,     n_clusters = 3,     cluster_fun = estimate_profiles,     oob_predict_fun = function(fit, newdata) {         estimate_profiles(newdata, n_clusters)     },     sample_size = 0.5 * nrow(pisaUSA15),     replace = FALSE,     n_samples = 50,     seed = 42 ) plot(lpa_cv_random)"},{"path":"/index.html","id":"profile-plot","dir":"","previous_headings":"","what":"Profile Plot","title":"Cluster Analysis Validation","text":"","code":"fit <- pisa_usa |>      dplyr::select(dplyr::all_of(cluster_vars)) |>     stats::kmeans(centers = 3) clav::profile_plot(pisa_usa[,cluster_vars],                    clusters = fit$cluster,                    df_dep = pisa_usa[,outcome_vars],                    center_band = 0.33,                    cluster_order = cluster_vars)"},{"path":"/reference/bivariate_cluster_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output for the bivariate cluster figure. — bivariate_cluster_plot_output","title":"Plot output for the bivariate cluster figure. — bivariate_cluster_plot_output","text":"Plot output bivariate cluster figure.","code":""},{"path":"/reference/bivariate_cluster_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output for the bivariate cluster figure. — bivariate_cluster_plot_output","text":"","code":"bivariate_cluster_plot_output(id, ...)"},{"path":"/reference/bivariate_cluster_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output for the bivariate cluster figure. — bivariate_cluster_plot_output","text":"id ID string corresponds ID used call module's UI function. ... parameters passed shiny::plotOutput()","code":""},{"path":"/reference/clav_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny application. — cluster_shiny","title":"Run the Shiny application. — cluster_shiny","text":"Run Shiny application. UI cluster analysis application Server function cluster analysis application","code":""},{"path":"/reference/clav_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny application. — cluster_shiny","text":"","code":"cluster_shiny(...)  clav_shiny_ui()  clav_shiny_server(input, output, session)"},{"path":"/reference/clav_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny application. — cluster_shiny","text":"... named list data frames make available Shiny application. input Shiny input object. output Shiny output object. session Shiny session object.","code":""},{"path":"/reference/cluster_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for cluster analysis. — cluster_module","title":"Shiny module for cluster analysis. — cluster_module","text":"Shiny module cluster analysis.","code":""},{"path":"/reference/cluster_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for cluster analysis. — cluster_module","text":"","code":"cluster_module(   id,   data,   default_vars = names(data())[sapply(data(), function(x) {      is.numeric(x)  })],   default_dependent_variable = NULL,   se_factor = 1 )"},{"path":"/reference/cluster_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for cluster analysis. — cluster_module","text":"id ID string corresponds ID used call module's UI function. data function return data (probably reactive function). default_vars character list variables include default. default_dependent_variable name dependent variable, NULL none. se_factor many standard errors plot.","code":""},{"path":"/reference/cluster_pairs_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output for the pairs plot. — cluster_pairs_plot_output","title":"Plot output for the pairs plot. — cluster_pairs_plot_output","text":"Plot output pairs plot.","code":""},{"path":"/reference/cluster_pairs_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output for the pairs plot. — cluster_pairs_plot_output","text":"","code":"cluster_pairs_plot_output(id, ...)"},{"path":"/reference/cluster_pairs_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output for the pairs plot. — cluster_pairs_plot_output","text":"id ID string corresponds ID used call module's UI function. ... parameters passed shiny::plotOutput()","code":""},{"path":[]},{"path":"/reference/cluster_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny application. — cluster_shiny","title":"Run the Shiny application. — cluster_shiny","text":"Run Shiny application.","code":""},{"path":"/reference/cluster_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny application. — cluster_shiny","text":"","code":"cluster_shiny()"},{"path":"/reference/cluster_size_bar_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output for the bar plot of cluster sizes. — cluster_size_bar_plot_output","title":"Plot output for the bar plot of cluster sizes. — cluster_size_bar_plot_output","text":"Plot output bar plot cluster sizes.","code":""},{"path":"/reference/cluster_size_bar_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output for the bar plot of cluster sizes. — cluster_size_bar_plot_output","text":"","code":"cluster_size_bar_plot_output(id, ...)"},{"path":"/reference/cluster_size_bar_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output for the bar plot of cluster sizes. — cluster_size_bar_plot_output","text":"id ID string corresponds ID used call module's UI function. ... parameters passed shiny::plotOutput()","code":""},{"path":"/reference/cluster_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster profile validation — cluster_validation","title":"Cluster profile validation — cluster_validation","text":"function takes multiple random samples provided data frame, estimate cluster membership, calculate mean (default, different statistic can specified using summary_fun parameter, e.g. median may appropriate) cluster using sample --bag (.e. sample). --bag sample function re-assign cluster labels mean absolute difference cluster labels full dataset small possible.","code":""},{"path":"/reference/cluster_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster profile validation — cluster_validation","text":"","code":"cluster_validation(   df,   n_clusters = 2,   cluster_fun = stats::kmeans,   get_cluster_fun = function(x) { x$cluster  },   oob_predict_fun = function(fit, newdata) {      predict(fit, newdata = newdata)  },   summary_fun = mean,   n_samples = 100,   sample_size = 0.5 * nrow(df),   replace = FALSE,   standardize = TRUE,   seed,   verbose = interactive(),   ... )  # S3 method for class 'clustervalidation' plot(   x,   plot_complete = TRUE,   plot_in_sample = TRUE,   plot_oob_sample = TRUE,   point_alpha = 0.1,   point_size = 1,   line_alpha = 0.1,   line_width = 1,   complete_color = \"blue\",   complete_size = 1,   complete_point_size = 2,   xlab = \"\",   ylab = ifelse(attr(x, \"standardize\"), \"Mean Standard Score\", \"Mean Score\"),   ... )  # S3 method for class 'clustervalidation' print(x, ...)  # S3 method for class 'clustervalidation' summary(object, in_sample = FALSE, oob_sample = TRUE, ...)  # S3 method for class 'cv_summary' plot(x, ...)  fix_cluster_labels(   cv,   greedy = (length(unique(cv$oob_sample$cluster)) > 6),   var,   ... )  plot_distributions(   cv,   plot_in_sample = TRUE,   plot_oob_sample = FALSE,   nrow = NULL,   palette = 2,   ... )"},{"path":"/reference/cluster_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster profile validation — cluster_validation","text":"df data frame estimate clusters. Note columns used estimation. n_clusters number clusters estimate. cluster_fun function used estimate clusters. get_cluster_fun function used get cluster classes. function takes one parameter, result cluster_fun. oob_predict_fun function used get predictions --bag sample. Function takes two parameters, first results cluster_fun, second  --bag sample data frame. summary_fun function used calculate statistic cluster iteration. Defaults mean. n_samples number random samples draw. sample_size size random sample. Defaults 50% observations. replace whether sampling done replacement. standardize whether variables standardized estimating clusters. seed random number seed. Note seed set iteration seed + iteration number. verbose whether function print status running. ... currently used. x result summary.clustervalidation() plot_complete whether profile line using complete data set plotted. plot_in_sample whether plot sample (.e. bootstrap) distributions. plot_oob_sample whether plot --bag samples. point_alpha alpha (transparency) level points. point_size size points. line_alpha alpha (transparency) level lines. line_width width lines. complete_color color path path using complete dataset (.e. plot_complete = TRUE) complete_size size path path using complete dataset (.e. plot_complete = TRUE) complete_point_size point size path path using complete dataset (.e. plot_complete = TRUE) xlab label x-axis. ylab label y-axis. object results cluster_validation. in_sample plot sample results. oob_sample plot --bag sample results. cv results cluster_validation(). greedy FALSE find optimal cluster pattern calculating difference combinations. TRUE consider one variable (one largest variance across means). var variable use greedy = TRUE. nrow number rows. ignored plot_in_sample = TRUE plot_oob_sample = TRUE. palette string, use named palette. number, index list palettes appropriate type. See ggplot2::scale_color_brewer() information.","code":""},{"path":"/reference/cluster_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster profile validation — cluster_validation","text":"list following elements: complete_sample data frame results using entire data set. in_sample data frame sample results. oob_sample data frame --bag results. complete_model_fit model fit full data set. in_sample_model_fits model fits sample. data frames contain four columns: iter iteration cluster cluster variable variable value mean value variable given cluster interation ggplot2 expression. ggplot2 expression. cv object cluster labels oob_sample data frame reassigned labels match across iterations best possible. ggplot2 expression.","code":""},{"path":"/reference/cluster_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster profile validation — cluster_validation","text":"number rows resulting data frames equal : ncol(df) * n_samples * n_clusters.","code":""},{"path":"/reference/cluster_variable_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Input to select the variables to perform the cluster analysis with. — cluster_variable_input","title":"Input to select the variables to perform the cluster analysis with. — cluster_variable_input","text":"Input select variables perform cluster analysis .","code":""},{"path":"/reference/cluster_variable_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input to select the variables to perform the cluster analysis with. — cluster_variable_input","text":"","code":"cluster_variable_input(id)"},{"path":"/reference/cluster_variable_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input to select the variables to perform the cluster analysis with. — cluster_variable_input","text":"id ID string corresponds ID used call module's UI function.","code":""},{"path":"/reference/daacs.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic Assessment and Achievement of College Skills — daacs","title":"Diagnostic Assessment and Achievement of College Skills — daacs","text":"Diagnostic Assessment Achievement College Skills (DAACS) suite technological social supports designed optimize student learning (see www.daacs.net. data subset data collected part randomized control trial (Bryer, et al, 2025) used study exploring person centered approach define learning profiles (Cleary, Bryer, & Yu, 2025). Students treatment group completed four assessments orientation: self-regulated learning (including sub domains metacognition, strategy use, motivation), mathematics, reading, writing. Students receive immediate customized feedback terms one, two, three dots indicating whether developing, emerging, mastering given skills. two outcome variables Cleary et al (2025) paper explored results DAACS assessments related feedback page views term one success.","code":""},{"path":"/reference/daacs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic Assessment and Achievement of College Skills — daacs","text":"","code":"data(daacs)"},{"path":"/reference/daacs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diagnostic Assessment and Achievement of College Skills — daacs","text":"data frame 6,376 rows 8 variables Motivation Self-regulated learning motivation total score. Scores can range 0 4. Metacognition Self-regulated learning metacognition total score. Scores can range 0 4. Strategies Self-regulated learning strategy use total score. Scores can range 0 4. Mathematics Mathematics total score. Scores can range 0 1. Reading Reading comprehension total score. Scores can range 0 1. Writing Writing total score. Scores can range 0 1. FeedbackViews Number feedback page views DAACS system. TermSuccess Whether student successfully completed 12 credits within first term.","code":""},{"path":"/reference/daacs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Diagnostic Assessment and Achievement of College Skills — daacs","text":"https://daacs.net","code":""},{"path":"/reference/daacs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diagnostic Assessment and Achievement of College Skills — daacs","text":"Cleary, J. T., Bryer, J., & Yu, E. C. Y. (2025, April 23–27). Examining college readiness profiles among students enrolling online college: importance leveraging academic skills self-regulated learning data. Paper presentation. American Educational Research Association, Denver, CO, United States. Bryer, J. M., Andrade, H., Cleary, T., Lui, ., & Franklin, D. (2024). eﬃcacy predictive power diagnostic assessment achievement college skills academic success indicators. Educational Technology Research Development. Lui, . M., Franklin, D., Akhmedjanova, D., Gorgun, G., Bryer, J., Andrade, H. L., & Cleary, T. (2018). Validity evidence internal structure DAACS self-regulated learning survey. Future Review: International Journal Transition, College, Career Success, 1 (1).","code":""},{"path":"/reference/dependent_null_hypothesis_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Output from the dependent varaible analysis. — dependent_null_hypothesis_output","title":"Output from the dependent varaible analysis. — dependent_null_hypothesis_output","text":"Output dependent varaible analysis.","code":""},{"path":"/reference/dependent_null_hypothesis_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output from the dependent varaible analysis. — dependent_null_hypothesis_output","text":"","code":"dependent_null_hypothesis_output(id)"},{"path":"/reference/dependent_null_hypothesis_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output from the dependent varaible analysis. — dependent_null_hypothesis_output","text":"id ID string corresponds ID used call module's UI function.","code":""},{"path":"/reference/dependent_variable_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny input to select the dependent (outcome) variable. — dependent_variable_input","title":"Shiny input to select the dependent (outcome) variable. — dependent_variable_input","text":"Shiny input select dependent (outcome) variable.","code":""},{"path":"/reference/dependent_variable_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny input to select the dependent (outcome) variable. — dependent_variable_input","text":"","code":"dependent_variable_input(id)"},{"path":"/reference/dependent_variable_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny input to select the dependent (outcome) variable. — dependent_variable_input","text":"id ID string corresponds ID used call module's UI function.","code":""},{"path":"/reference/dependent_variable_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny output for the dependnet sample plot. — dependent_variable_plot_output","title":"Shiny output for the dependnet sample plot. — dependent_variable_plot_output","text":"Shiny output dependnet sample plot.","code":""},{"path":"/reference/dependent_variable_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny output for the dependnet sample plot. — dependent_variable_plot_output","text":"","code":"dependent_variable_plot_output(id, ...)"},{"path":"/reference/dependent_variable_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny output for the dependnet sample plot. — dependent_variable_plot_output","text":"id ID string corresponds ID used call module's UI function. ... parmaeters passed shiny::plotOutput().","code":""},{"path":"/reference/dependent_variable_table_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Output of the dependent variable analysis. — dependent_variable_table_output","title":"Output of the dependent variable analysis. — dependent_variable_table_output","text":"Table output analyzing dependent variable clusters. either ANOVA quantitative dependent variable chi-squared test qualitative dependent variable.","code":""},{"path":"/reference/dependent_variable_table_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output of the dependent variable analysis. — dependent_variable_table_output","text":"","code":"dependent_variable_table_output(id)"},{"path":"/reference/dependent_variable_table_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output of the dependent variable analysis. — dependent_variable_table_output","text":"id ID string corresponds ID used call module's UI function.","code":""},{"path":"/reference/describe_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic summary statistics by group — describe_by","title":"Basic summary statistics by group — describe_by","text":"Calculate basic summary statistics grouping variable. function inspired psych::describeBy() function implemented always return data frame using tidyverse. funs parameter provides additional flexibility regarding summary statistics calculated.","code":""},{"path":"/reference/describe_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic summary statistics by group — describe_by","text":"","code":"describe_by(   df,   group,   group_name = \"group\",   funs = list(n = length, mean = mean, sd = sd, se = function(x, ...) {      sd(x,     ...)/sqrt(length(x))  }, median = median, min = min, max = max, range = function(x,     ...) {      diff(range(x, ...))  }) )"},{"path":"/reference/describe_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic summary statistics by group — describe_by","text":"df data frame summarize. group grouping vector. group_name name grouping variable returned data frame. funs named list functions. names list used column names returned data frame.","code":""},{"path":"/reference/describe_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic summary statistics by group — describe_by","text":"data frame column group corresponding group variable column variable corresponding names data frame. Additional columns function funs parameter.","code":""},{"path":"/reference/describe_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic summary statistics by group — describe_by","text":"","code":"data(pisa2015, package = 'clav') describe_by(df = pisa2015[,c('science_score', 'efficacy', 'motivation')], group = pisa2015$country) #>           group      variable     n       mean         sd          se   median #> 1 UNITED STATES      efficacy  4637   1.870309  0.6662445 0.009783969   2.0000 #> 2 UNITED STATES    motivation  4637   1.926785  0.7561965 0.011104937   2.0000 #> 3 UNITED STATES science_score  4637 506.398045 91.8862771 1.349373286 504.8727 #> 4        CANADA      efficacy 15934   1.875698  0.6669602 0.005283692   2.0000 #> 5        CANADA    motivation 15934   2.046865  0.7794135 0.006174553   2.0000 #> 6        CANADA science_score 15934 526.652038 84.6720478 0.670776218 529.0316 #>        min      max    range #> 1   0.0000   3.0000   3.0000 #> 2   0.0000   3.0000   3.0000 #> 3 234.1381 817.7677 583.6296 #> 4   0.0000   3.0000   3.0000 #> 5   0.0000   3.0000   3.0000 #> 6 225.5391 795.2875 569.7484"},{"path":"/reference/discriminant_projection_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output for the discriminant project figure. — discriminant_projection_plot_output","title":"Plot output for the discriminant project figure. — discriminant_projection_plot_output","text":"Plot output discriminant project figure.","code":""},{"path":"/reference/discriminant_projection_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output for the discriminant project figure. — discriminant_projection_plot_output","text":"","code":"discriminant_projection_plot_output(id, ...)"},{"path":"/reference/discriminant_projection_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output for the discriminant project figure. — discriminant_projection_plot_output","text":"id ID string corresponds ID used call module's UI function. ... parameters passed shiny::plotOutput()","code":""},{"path":"/reference/fitmeasures.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function used to determine the optimal number of clusters. — optimal_clusters","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"function calculate number metrics used determine optimal number clusters. result data frame row corresponds number clusters (k) columns various metrics. S3 plotting function provided.","code":""},{"path":"/reference/fitmeasures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"","code":"optimal_clusters(   df,   max_k = 9,   cluster_fun = stats::kmeans,   wss = TRUE,   silhoutte = TRUE,   gap = TRUE,   calinski_harabasz = TRUE,   davies_bouldin = TRUE,   rand_index = TRUE )  # S3 method for class 'optimalclusters' plot(x, ...)  wss(df, k = 9, cluster_fun = stats::kmeans)  silhouette_score(df, k = 9, cluster_fun = stats::kmeans, ...)  calinski_harabasz(df, k = 9, cluster_fun = stats::kmeans, ...)  davies_bouldin(df, k = 9, cluster_fun = stats::kmeans, ...)  rand_index(df, k = 9, cluster_fun = stats::kmeans, ...)"},{"path":"/reference/fitmeasures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"df data frame calculate Rand index . max_k maximum number clusters estimate. cluster_fun clustering function. wss whether calculate within sum squares. silhoutte whether calculate Silhoutte index. gap whether calculate Gap statistic. calinski_harabasz whether calculate Calinski Harabasz index davies_bouldin whether calculate Davies Bouldin index. rand_index whether calculate Rand index. x result optimal_clusters() ... parameters passed fossil::rand.index(). k number clusters.","code":""},{"path":"/reference/fitmeasures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"data frame various metrics used determine optimal number clusters. row corresponds k ranging 1 max_k following columns (corresponding metric requested): k Number clusters wss Within sum squares silhoutte Silhouette analysis measures quality clustering provides insight separation distance resulting clusters. higher silhouette score indicates object well matched cluster poorly matched neighboring clusters. gap Gap Statistic compares total within intra-cluster variation different values k expected values null reference distribution data. optimal k value yields largest gap statistic. calinski_harabasz Index evaluates clusters based compactness separation. index calculated using ratio -cluster variance within-cluster variance, higher values indicate better-defined clusters davies_bouldin Davies-Bouldin index measure much separation clusters. Lower values Davies-Bouldin index indicate model better separation. rand_index calculates proportion agreement two clusters, considering pairs elements correctly assigned different clusters. Higher values indicate greater similarity better clustering quality. ggplot2 expression","code":""},{"path":"/reference/n_cluster_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Output for printing status messages from the Shiny module. — n_cluster_message","title":"Output for printing status messages from the Shiny module. — n_cluster_message","text":"Output printing status messages Shiny module.","code":""},{"path":"/reference/n_cluster_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output for printing status messages from the Shiny module. — n_cluster_message","text":"","code":"n_cluster_message(id)"},{"path":"/reference/n_cluster_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output for printing status messages from the Shiny module. — n_cluster_message","text":"id ID string corresponds ID used call module's UI function.","code":""},{"path":"/reference/n_cluster_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output for the figure to determine the optimal number of clusters. — n_cluster_plot_output","title":"Plot output for the figure to determine the optimal number of clusters. — n_cluster_plot_output","text":"Plot output figure determine optimal number clusters.","code":""},{"path":"/reference/n_cluster_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output for the figure to determine the optimal number of clusters. — n_cluster_plot_output","text":"","code":"n_cluster_plot_output(id)"},{"path":"/reference/n_cluster_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output for the figure to determine the optimal number of clusters. — n_cluster_plot_output","text":"id ID string corresponds ID used call module's UI function.","code":""},{"path":"/reference/n_clusters_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Slider input for the desired number of clusters. — n_clusters_input","title":"Slider input for the desired number of clusters. — n_clusters_input","text":"Slider input desired number clusters.","code":""},{"path":"/reference/n_clusters_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slider input for the desired number of clusters. — n_clusters_input","text":"","code":"n_clusters_input(   id,   label = \"Number of clusters:\",   min = 2,   max = 10,   value = 4 )"},{"path":"/reference/n_clusters_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slider input for the desired number of clusters. — n_clusters_input","text":"id ID string corresponds ID used call module's UI function. label label slider input. min minimum value (inclusive) can selected. max maximum value (inclusive) can selected. value initial value slider.","code":""},{"path":"/reference/optimal_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function used to determine the optimal number of clusters. — optimal_clusters","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"Utility function used determine optimal number clusters.","code":""},{"path":"/reference/optimal_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"","code":"optimal_clusters(df, max_k = 9)  # S3 method for class 'optimalclusters' plot(x, ...)"},{"path":"/reference/optimal_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"df data frame determine optimal number clusters . max_k maximun number clusters estimate. x result optimal_clusters() ... parameters passed cowplot::plot_grid()","code":""},{"path":"/reference/optimal_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function used to determine the optimal number of clusters. — optimal_clusters","text":"data frame various metrics used determine optimal number clusters. row corresponds k ranging 1 max_k following columns: k number clusters wss within sum squares silhoutte  gap  calinski_harabasz  davies_bouldin  ggplot2 expression","code":""},{"path":"/reference/pisa2015.html","id":null,"dir":"Reference","previous_headings":"","what":"Student questionnaire and science performance data from the 2015 PISA — pisa2015","title":"Student questionnaire and science performance data from the 2015 PISA — pisa2015","text":"subset Programme International Student Assessment (PISA) including student questionnaire data performance science assessment. Data United States Canada included.","code":""},{"path":"/reference/pisa2015.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student questionnaire and science performance data from the 2015 PISA — pisa2015","text":"","code":"data(pisa2015)"},{"path":"/reference/pisa2015.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Student questionnaire and science performance data from the 2015 PISA — pisa2015","text":"data frame 20,571 rows 8 variables","code":""},{"path":"/reference/pisa2015.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Student questionnaire and science performance data from the 2015 PISA — pisa2015","text":"https://www.oecd.org/en/data/datasets/pisa-2015-database.html","code":""},{"path":"/reference/pisa2015.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Student questionnaire and science performance data from the 2015 PISA — pisa2015","text":"seven variables: country. country student (USA Canada). science_score. Average science score 10 plausible values. principals. Average scale score students self-reported understanding scientific principals. belonging. Average scale score belonging. interest. Average scale score interest science. enjoyment. Average scale score enjoyment science. motivation. Average scale score motivation science. efficacy. Average scale score students self-efficacy science. numeric scores converted standard scores (z-scores). Likert response questions students completed used calculate belonging, interest, motivation, efficacy, principals variables. values parentheses correspond variable names original PISA database. questionnaire can downloaded OECD PISA website. Belonging: Thinking school: extent agree following statements? (ST034) feel like outsider (left things) school. make friends easily school. feel like belong school. feel awkward place school. students seem like . feel lonely school. Interest: much disagree agree statements ? (ST094) generally fun learning broad science topics. like reading broad science. happy working broad science topics. enjoy acquiring new knowledge broad science. interested learning broad science. Enjoyment: much disagree agree statements ? (ST094) generally fun learning broad science topics. like reading broad science. happy working broad science topics. enjoy acquiring new knowledge broad science. interested learning broad science. Motivation: much agree statements ? (ST113) Making effort school science subject(s) worth help work want later . learn school science subject(s) important need want later . Studying school science subject(s) worthwhile learn improve career prospects. Many things learn school science subject(s) help get job. Efficacy: easy think perform following tasks ? (ST129) Recognise science question underlies newspaper report health issue. Explain earthquakes occur frequently areas others. Describe role antibiotics treatment disease. Identify science question associated disposal garbage. Predict changes environment affect survival certain species. Interpret scientific information provided labelling food items. Discuss new evidence can lead change understanding possibility life Mars. Identify better two explanations formation acid rain. Principals: much disagree agree statements ? (ST131) good way know something true experiment. Ideas broad science sometimes change. Good answers based evidence many different experiments. good try experiments make sure findings. Sometimes broad science scientists change minds true science. ideas broad science science books sometimes change.","code":""},{"path":"/reference/predict.kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict cluster class for k-means cluster — predict.kmeans","title":"Predict cluster class for k-means cluster — predict.kmeans","text":"Predict cluster class k-means cluster","code":""},{"path":"/reference/predict.kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict cluster class for k-means cluster — predict.kmeans","text":"","code":"# S3 method for class 'kmeans' predict(object, newdata, method = c(\"classes\", \"centers\"), ...)"},{"path":"/reference/predict.kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict cluster class for k-means cluster — predict.kmeans","text":"object results stats::kmeans(). newdata data frame make class predictions. method method used make predictions. ... currently used.","code":""},{"path":"/reference/predict.kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict cluster class for k-means cluster — predict.kmeans","text":"vector predicted clusters.","code":""},{"path":"/reference/print_p_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to print p-values — print_p_value","title":"Utility function to print p-values — print_p_value","text":"function print pretty p-value. p-value less 10^(-digits), example 0.01 digits = 2, result \"p < 0.01\".","code":""},{"path":"/reference/print_p_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to print p-values — print_p_value","text":"","code":"print_p_value(p_value, digits = 2)"},{"path":"/reference/print_p_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to print p-values — print_p_value","text":"p_value p-value. digits number digits print.","code":""},{"path":"/reference/print_p_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to print p-values — print_p_value","text":"character version p-value.","code":""},{"path":"/reference/profile_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile plot for cluster analysis. — profile_plot","title":"Profile plot for cluster analysis. — profile_plot","text":"Profile plot cluster analysis.","code":""},{"path":"/reference/profile_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile plot for cluster analysis. — profile_plot","text":"","code":"profile_plot(   df,   clusters,   df_dep,   standardize = TRUE,   bonferroni = TRUE,   label_means = TRUE,   label_profile_means = label_means,   label_outcome_means = label_means,   center_band = 0.25,   center_fill = \"#f0f9e8\",   center_alpha = 0.1,   text_size = 4,   hjust = 0.5,   point_size = 2,   se_factor = 1.96,   color_palette = 2,   cluster_labels,   cluster_order,   label_clusters = TRUE,   cluster_label_x,   cluster_label_hjust = 5,   ylab = ifelse(standardize, \"Mean Standard Score\", \"Mean Score\"),   title = \"Cluster Profiles\" )"},{"path":"/reference/profile_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile plot for cluster analysis. — profile_plot","text":"df data.frame columns used cluster analysis. clusters vector indicating cluster row df belongs . df_dep data.frame dependent variables include plot (optional). standardize TRUE values df converted z-scores. bonferroni TRUE Bonferroni adjusted error bars plotted. label_means label mean values clusters outcome variables. label_profile_means label mean values clusters. label_outcome_means label mean values outcome variables. center_band percentage around mean shade. works standardize = TRUE. center_fill color center band. center_alpha transparency level center band. text_size text size. hjust horizontal adjustment labels. point_size size points passed ggplot2::geom_point(). se_factor critical value used ot determine width standard error bars. color_palette color palette use. See ggplot2:scale_color_brewer() details. color_palette = 0 ggplot2::scale_color_grey() used. cluster_labels labels clusters. cluster_order order clusters x-axis. label_clusters whether label clusters main panel. cluster_label_x cluster labels. cluster_label_hjust horizontal adjustment y-axis labels. ylab label y-axis. title plot title.","code":""},{"path":"/reference/profile_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile plot for cluster analysis. — profile_plot","text":"","code":"data(daacs, package = 'clav') cluster_vars <- c('Motivation', 'Metacognition', 'Strategies', 'Mathematics', 'Reading', 'Writing') daacs <- daacs |> dplyr::mutate(across(dplyr::all_of(cluster_vars), clav::scale_this)) kmeans_out <- stats::kmeans(daacs[,cluster_vars], 5) profile_plot(     df = daacs[,cluster_vars],     clusters = kmeans_out$cluster,     df_dep = daacs[,c('FeedbackViews', 'TermSuccess')] )   # Grey scale plot profile_plot(     df = daacs[,cluster_vars],     clusters = kmeans_out$cluster,     df_dep = daacs[,c('FeedbackViews', 'TermSuccess')],     center_fill = 'grey90',     color_palette = 0 )"},{"path":"/reference/profile_plot_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output for the profiles. — profile_plot_output","title":"Plot output for the profiles. — profile_plot_output","text":"Plot output profiles.","code":""},{"path":"/reference/profile_plot_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output for the profiles. — profile_plot_output","text":"","code":"profile_plot_output(id, ...)"},{"path":"/reference/profile_plot_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output for the profiles. — profile_plot_output","text":"id ID string corresponds ID used call module's UI function. ... parameters passed shiny::plotOutput()","code":""},{"path":[]},{"path":"/reference/scale_this.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert vector to z-scores — scale_this","title":"Convert vector to z-scores — scale_this","text":"Convert vector z-scores","code":""},{"path":"/reference/scale_this.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert vector to z-scores — scale_this","text":"","code":"scale_this(x)"},{"path":"/reference/scale_this.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert vector to z-scores — scale_this","text":"x vector convert.","code":""},{"path":"/reference/scale_this.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert vector to z-scores — scale_this","text":"vector standard scores.","code":""}]
